#All paths and files in this document should be relative to working_directory.
#You should mount your data directory to /data/ in the docker container.
working_directory = '/data/'

#A list of MS-DIAL mzexport files.
data = ['mzexport_1.txt', 
	'mzexport_2.txt']

#Seed value for the rng used in train-test spliting.
seed = 1

#Analytes eluting before this time (in minutes) will be categorized as not_considered.
#Use either one number for all files or a list of one number per file.
min_rt = [0.5, 0.5]

#An RT correction flexablility parameter. Must be between 0 and 1.
#Increase this value if the RT regression plot seems excessively sensitive to noise.
#Reduce this value if RT regression fails to fit real features of the data.
lowess_frac = 0.25

#Whether calculated m/z error should be in units of ppm. If false units are Da.
ppm = false

#Persistant model directory. If training this will be created for you.
#The docker image contains two trained models that you can use.
model = '/models/MSD4_QE_Pro_model'
#model = '/models/MSD4_TOF_model'

#If true a preexisting model and outputs will be overwritten.
overwrite = false

#Should be one of 'train' or 'infer'
mode = 'infer'

#Fraction of provided data used for training.
#Validation will be carried out on the remaning fraction.
#Parameter ignored for inference.
test_split = 0.8

#Directory to save outputs. Will be created if not extant.
output = 'example_output'

#Whether to make quality control plots. These will be stored in a subdirectory of output
#Must be one of 'none', 'essential', or 'all'.
QC_plots = 'essential'

#What file types to export. Must be a list, even with one value.
#Can be any of 'png', 'jpg', 'pdf', 'raw', 'rgba', 'svg', 'tiff', 'webp'
QC_plot_extensions = ['png']

#Set the amount of information to be displayed in the console.
#10 shows the most information 50 silences logging display. 
#All logs will be saved to MSDpostprocess.log regardless of this setting.
log_level = 20

#Any entry without a finite, numerical value in these columns will be removed.
required_cols = ['Dot product', 'S/N average', 'Average Rt(min)', 'Reference m/z']

#The component models of this tool score putative IDs between 0 and 1.
#These cutoffs determine the score threshold above which an ID is considered positive.
[cutoffs]
mz_correction = 0.5
rt_correction = 0.5
#Below the first element final predictions are classed negative.
#Above the second they're classed positive.
#In between they're classed needs_reanalysis.
predictor_model = [0.25,0.75]

#If you wish to add predictors, e.g. CCS error, you may input the mzmatrix column names here.
#However, a new model will have to be trained to work with the new predictors.
[features]
mz_correction = ['Dot product', 'S/N average', 'isotope_error']
rt_correction = ['Dot product', 'S/N average', 'isotope_error', 'mz_error']
predictor_model = ['Dot product', 'S/N average', 'isotope_error', 'mz_error', 'rt_error']
